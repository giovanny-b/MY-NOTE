/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.BEGIN.Notes;

import java.awt.event.*;
import java.io.*;
import java.text.SimpleDateFormat;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author giovannyb
 */
public class NotesInterface extends javax.swing.JFrame {
    
    public static String ne = System.getProperty("user.name");
    public static String os = System.getProperty("os.name");

    public static String path = System.getProperty("user.dir");
    public static File archivo = null;
    public static File file = null;
    public static FileReader fr = null;
    public static FileWriter fw = null;
    public static BufferedWriter bw;
    public static BufferedReader br;
    public static boolean guardao = false;
    public static String nombre = "";
    public static boolean abierto = false;

    /**
     * Creates new form NotesInterface
     */
    public NotesInterface() {
        initComponents();
        
        this.setLocationRelativeTo(null);
        this.setTitle("MY NOTE");

        Carpeta();
        Nuevo();
        getDatos();
        
        LBLpro.setText(ne + " @ " + os);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LBLdirectorio = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TXTdoc = new javax.swing.JTextArea();
        LBLnombre = new javax.swing.JLabel();
        LBLmodificacion = new javax.swing.JLabel();
        LBLtamaño = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        PNLdatos = new javax.swing.JPanel();
        LBLpro = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        File = new javax.swing.JMenu();
        Nuevo = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        Abrir = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        MsaveAs = new javax.swing.JMenuItem();
        Msave = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        Eliminar = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        Msalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LBLdirectorio.setFont(new java.awt.Font("Noto Sans CJK TC Bold", 1, 14)); // NOI18N
        LBLdirectorio.setForeground(new java.awt.Color(255, 0, 0));
        LBLdirectorio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LBLdirectorio.setText("Directorio");

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        TXTdoc.setColumns(20);
        TXTdoc.setRows(5);
        TXTdoc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TXTdocKeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(TXTdoc);

        LBLnombre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LBLnombre.setText("LBLnombre");

        LBLmodificacion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LBLmodificacion.setText("Modificacion");

        LBLtamaño.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LBLtamaño.setText("Tamaño");

        PNLdatos.setBorder(javax.swing.BorderFactory.createTitledBorder(new org.jdesktop.swingx.border.DropShadowBorder(), "Mis Notas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Noto Sans", 1, 13), new java.awt.Color(0, 102, 102))); // NOI18N
        PNLdatos.setLayout(new org.jdesktop.swingx.VerticalLayout());
        jScrollPane1.setViewportView(PNLdatos);

        LBLpro.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        LBLpro.setForeground(new java.awt.Color(255, 0, 0));
        LBLpro.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LBLpro.setText("jLabel1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(LBLnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LBLmodificacion, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LBLtamaño, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LBLpro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LBLnombre)
                    .addComponent(LBLmodificacion)
                    .addComponent(LBLtamaño))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LBLpro))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jPanel1);

        jMenu1.setText("Notes");

        File.setText("File");

        Nuevo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Nuevo.setText("Nuevo");
        Nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NuevoActionPerformed(evt);
            }
        });
        File.add(Nuevo);
        File.add(jSeparator1);

        Abrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Abrir.setText("Abrir");
        Abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirActionPerformed(evt);
            }
        });
        File.add(Abrir);
        File.add(jSeparator2);

        MsaveAs.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        MsaveAs.setText("Guardar como");
        MsaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MsaveAsActionPerformed(evt);
            }
        });
        File.add(MsaveAs);

        Msave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Msave.setText("Guardar");
        Msave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MsaveActionPerformed(evt);
            }
        });
        File.add(Msave);
        File.add(jSeparator3);

        Eliminar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Eliminar.setText("Eliminar");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });
        File.add(Eliminar);
        File.add(jSeparator4);

        Msalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Msalir.setText("Salir");
        Msalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MsalirActionPerformed(evt);
            }
        });
        File.add(Msalir);

        jMenu1.add(File);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1288, Short.MAX_VALUE)
                    .addComponent(LBLdirectorio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LBLdirectorio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 652, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirActionPerformed
        Abrir();
    }//GEN-LAST:event_AbrirActionPerformed

    private void TXTdocKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTdocKeyPressed
    }//GEN-LAST:event_TXTdocKeyPressed

    private void MsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MsaveActionPerformed
        guardao = true;
        GuardarC();
    }//GEN-LAST:event_MsaveActionPerformed

    private void NuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NuevoActionPerformed
        Nuevo();
    }//GEN-LAST:event_NuevoActionPerformed

    private void MsaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MsaveAsActionPerformed
        guardao = false;
        GuardarC();
    }//GEN-LAST:event_MsaveAsActionPerformed

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
        Eliminar();
    }//GEN-LAST:event_EliminarActionPerformed

    private void MsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MsalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_MsalirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {

            UIManager.setLookAndFeel("com.formdev.flatlaf.FlatDarkLaf");

        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NotesInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NotesInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NotesInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NotesInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NotesInterface().setVisible(true);
            }
        });
    }

    public void getDatos() {

        PNLdatos.removeAll();

        try {

            file = new File(path + "/datos");

            if (file.exists()) {
                File[] documentos = file.listFiles();

                if (documentos == null || documentos.length == 0) {
                    JOptionPane.showMessageDialog(null, "No hay notas, empiece a crearlas...");
                } else {
                    for (int i = 0; i < documentos.length; i++) {
                        archivo = documentos[i];

                        JButton boton = new JButton(archivo.getName());

                        PNLdatos.add(boton);

                        boton.addActionListener(new ActionListener() {
                            @Override
                            public void actionPerformed(ActionEvent ae) {

                                guardao = true;
                                
                                nombre = boton.getText();

                                TXTdoc.setText("");
                                String texto = "";
                                String Nota = "";
                                
                                abierto = true;

                                try {

                                    file = new File(path + "/datos/" + boton.getText());

                                    fr = new FileReader(file);
                                    br = new BufferedReader(fr);
                                    LBLdirectorio.setText(file.getAbsolutePath());

                                    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm");

                                    LBLmodificacion.setText("Modificacion: " + sdf.format(file.lastModified()));
                                    LBLnombre.setText("Nombre: " + file.getName());
                                    LBLtamaño.setText("Tamaño: " + String.format("%d bytes", file.length()));

                                    //entrada = new FileInputStream(fr);
                                    Nota = br.readLine();

                                    while (Nota != null) {
                                        texto = texto + Nota + "\n";
                                        Nota = br.readLine();
                                    }

                                    TXTdoc.append(texto);

                                } catch (Exception e) {
                                    System.out.println(e.getMessage());
                                }
                            }
                        });

                        PNLdatos.updateUI();
                    }
                }

            } else {

            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

    }

    public void Abrir() {
        JFileChooser fc = new JFileChooser();

        int ret = fc.showOpenDialog(this);

        if (ret == JFileChooser.APPROVE_OPTION) {
            
            abierto = true;
            
            file = fc.getSelectedFile();

            String texto = "";
            TXTdoc.setText("");

            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm");

            try {

                fr = new FileReader(file);
                br = new BufferedReader(fr);

                LBLdirectorio.setText(file.getAbsolutePath());

                LBLmodificacion.setText("Modificacion: " + sdf.format(file.lastModified()));
                LBLnombre.setText("Nombre: " + file.getName());
                LBLtamaño.setText("Tamaño: " + String.format("%d bytes", file.length()));

                String Nota = br.readLine();
                //entrada = new FileInputStream(file);

                while (Nota != null) {
                    texto = texto + Nota + "\n";
                    Nota = br.readLine();
                }

                TXTdoc.append(texto);

            } catch (Exception e) {
                System.out.println(e.getMessage());
            }

        }
    }

    public void GuardarC() {
        
        if (!guardao) {

            JFileChooser flchooser = new JFileChooser();
            //flchooser.getExtensionFilters().addAll(new ExtensionFilter("Documento de texto: ", "*.txt", "*.docx", "*.odt"));
            flchooser.setFileFilter(new FileNameExtensionFilter("Texto", ".txt" + "Notes", ".nts"));
            int ret = flchooser.showSaveDialog(null);

            if (ret == JFileChooser.APPROVE_OPTION) {
                abierto = true;
                file = flchooser.getSelectedFile();
                FileWriter fw = null;
                bw = null;
                try {
                    fw = new FileWriter(file, false);
                    bw = new BufferedWriter(fw);

                    String texto = TXTdoc.getText();
                    bw.write(texto, 0, texto.length());
                    LBLnombre.setText(file.getName());
                    LBLdirectorio.setText(file.getAbsolutePath());
                    guardao = true;
                } catch (Exception e) {
                    TXTdoc.append(e.toString());
                } finally {
                    try {
                        bw.close();
                    } catch (Exception e2) {
                        TXTdoc.append(e2.toString());
                    }
                }

            }
        } else {

            if (!abierto) {
                String nombre2 = JOptionPane.showInputDialog("Nombre de la nota");
                
                nombre = nombre2+".nts";

                file = new File(path + "/datos/" + nombre);

                FileWriter fw = null;
                bw = null;
                try {
                    fw = new FileWriter(file, false);
                    bw = new BufferedWriter(fw);

                    String texto = TXTdoc.getText();
                    bw.write(texto, 0, texto.length());
                    LBLdirectorio.setText(file.getAbsolutePath());
                    LBLtamaño.setText("Tamaño: " + String.format("%d bytes", file.length()));

                    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm");

                    LBLmodificacion.setText("Modificacion: " + sdf.format(file.lastModified()));
                    LBLnombre.setText("Nombre: " + file.getName());

                } catch (Exception e) {
                    TXTdoc.append(e.toString());
                } finally {
                    try {
                        bw.close();
                    } catch (Exception e2) {
                        TXTdoc.append(e2.toString());
                    }
                }

                getDatos();
                abierto = true;
            } else {

                file = new File(path + "/datos/" + nombre);

                FileWriter fw = null;
                bw = null;
                try {
                    fw = new FileWriter(file, false);
                    bw = new BufferedWriter(fw);

                    String texto = TXTdoc.getText();
                    bw.write(texto, 0, texto.length());
                    LBLdirectorio.setText(file.getAbsolutePath());

                    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm");

                    LBLmodificacion.setText("Modificacion: " + sdf.format(file.lastModified()));
                    LBLnombre.setText("Nombre: " + file.getName());
                    LBLtamaño.setText("Tamaño: " + String.format("%d bytes", file.length()));

                } catch (Exception e) {
                    TXTdoc.append(e.toString());
                } finally {
                    try {
                        bw.close();
                    } catch (Exception e2) {
                        TXTdoc.append(e2.toString());
                    }
                }

                getDatos();
            }

        }
    }

    public void Nuevo() {
        file = new File(path + "/datos");

        LBLdirectorio.setText(file.getAbsolutePath());
        LBLnombre.setText("Nombre: ");
        LBLtamaño.setText("Tamaño: ");
        LBLmodificacion.setText("Modificacion: ");
        TXTdoc.setText("");
        guardao = false;
        abierto = false;
    }

    public void Carpeta() {
        file = new File(path + "/datos");

        if (file.exists()) {
            System.out.println("La carpeta existe");
        } else {
            if (file.mkdir()) {
                System.out.println("carpeta creada");
            }
        }
    }

    public void Eliminar() {
        int value = JOptionPane.showConfirmDialog(null, "¿Esta seguro que desea eliminar el archivo?");

        if (value == JOptionPane.YES_OPTION) {
            if (file.delete()) {
                file = new File(path + "/datos");
                JOptionPane.showMessageDialog(null, "Archivo borrado con exito!");
                getDatos();
                abierto = false;
            } else {
                JOptionPane.showMessageDialog(null, "El archivo no se pudo borrar");
            }
        } else if (value == JOptionPane.NO_OPTION) {
            System.out.println("no borrado");
        } else if (value == JOptionPane.CANCEL_OPTION) {
            System.out.println("cancelado");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Abrir;
    private javax.swing.JMenuItem Eliminar;
    private javax.swing.JMenu File;
    private javax.swing.JLabel LBLdirectorio;
    private javax.swing.JLabel LBLmodificacion;
    private javax.swing.JLabel LBLnombre;
    private javax.swing.JLabel LBLpro;
    private javax.swing.JLabel LBLtamaño;
    private javax.swing.JMenuItem Msalir;
    private javax.swing.JMenuItem Msave;
    private javax.swing.JMenuItem MsaveAs;
    private javax.swing.JMenuItem Nuevo;
    private javax.swing.JPanel PNLdatos;
    private javax.swing.JTextArea TXTdoc;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    // End of variables declaration//GEN-END:variables
}
